

Null Safety
-> Null에 대해 안전하다
-> 코틀린의 특징

Null vs 0

-> 0 : 무언가를 사용하고 남은 상태
-> Null : 아예 존재하지 않는 상태, 관리할 수 없는 상태

Null이 안전하지 않은 이유

0 + 10 = 10
Null + 10 = ? (에러)

button.setOnClickListener
null.setOnClickListener (에러)

이러한 상황에 NullPointerExceptionError가 뜬다

※ 코틀린이 Null을 안전하게 하기 위해 사용하는 문법 ※
-> ?
-> !!

// 물음표 앞에 있는 게 null이 아니라면 이 문장을 실행한다. (이걸 자주 사용)
button?.setOnClickListener
// Null이 아닐 때 , 즉 100% 확신할 때 사용한다. (사용 비추, 100%인 건 없지롱)
button!!.setOnClickListener

Null이 될 수 있는 타입
Int, Double, Float, Class     -> Null이 될 수 없는 타입
Int?, Double?, Float?, Class? -> Null이 될 수 있는 타입